/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.88
 * Generated at: 2023-08-17 06:41:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import kr.or.dw.vo.CalendarVO;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/views/common/../include/footer_js.jsp", Long.valueOf(1692250377172L));
    _jspx_dependants.put("jar:file:/C:/dwFinal/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/EazyRP_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1686551956753L));
    _jspx_dependants.put("/WEB-INF/views/common/calendar.jsp", Long.valueOf(1690244277538L));
    _jspx_dependants.put("jar:file:/C:/dwFinal/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/EazyRP_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/common/calendar_js.jsp", Long.valueOf(1692174286973L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.dw.vo.CalendarVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 모리스 차트 -->\r\n");
      out.write(" <script src=\"//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"></script>\r\n");
      out.write(" <script src=\"//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js\"></script>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css\">\r\n");
      out.write("<!-- main -->\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"text-center\" style=\"display: flex; margin-top: 1em; max-height: 70%;\">\r\n");
      out.write("\r\n");
      out.write("		<div class=\"\" style=\"width: 40%;\">\r\n");
      out.write("			<div class=\"card mb-6 rounded-3 shadow-sm border\">\r\n");
      out.write("				<div class=\"card-header py-3\">\r\n");
      out.write("					<h5 class=\"my-0 fw-normal\">캘린더</h5>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<div>\r\n");
      out.write("						");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- CSS only -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- 화면 해상도에 따라 글자 크기 대응(모바일 대응) -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\">\r\n");
      out.write("\r\n");
      out.write("<!-- jquery CDN -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<!-- moment CDN -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js\"></script>\r\n");
      out.write("<!-- fullcalendar CDN -->\r\n");
      out.write("<link href='https://cdn.jsdelivr.net/npm/fullcalendar@5.8.0/main.min.css' rel='stylesheet' />\r\n");
      out.write("<script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.8.0/main.min.js'></script>\r\n");
      out.write("<!-- fullcalendar 언어 CDN -->\r\n");
      out.write("<script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.8.0/locales-all.min.js'></script>\r\n");
      out.write("		  \r\n");
      out.write("<style>\r\n");
      out.write("	/* 캘린더 위의 해더 스타일(날짜가 있는 부분) */\r\n");
      out.write("	.fc-header-toolbar {\r\n");
      out.write("/* 		padding: 0em; */\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* body 스타일 */\r\n");
      out.write("	.fc .fc-scrollgrid-liquid {\r\n");
      out.write("	  overflow: hidden;\r\n");
      out.write("	  font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* modal 스타일 */\r\n");
      out.write("	.modal {\r\n");
      out.write("		text-align: left;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"padding:30px;\">\r\n");
      out.write("\r\n");
      out.write("	<!-- calendar 태그 -->\r\n");
      out.write("	<div class=\"calendarBox\" id='calendar-container'>\r\n");
      out.write("		<div id='calendar'></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 비어 있는 modal 추가 -->\r\n");
      out.write("    <div class=\"modal fade\" id=\"calendarModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n");
      out.write("        aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">일정을 입력하세요.</h5>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">일정 내용</label>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"title\" value=\"\" name=\"calendar_title\">\r\n");
      out.write("                        \r\n");
      out.write("                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">시작일</label>\r\n");
      out.write("                        <input type=\"date\" class=\"form-control\" id=\"StartDate\" value=\"\" name=\"calendar_start\">\r\n");
      out.write("                        \r\n");
      out.write("                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">종료일</label>\r\n");
      out.write("                        <input type=\"date\" class=\"form-control\" id=\"EndDate\" value=\"\" name=\"calendar_end\">\r\n");
      out.write("                        \r\n");
      out.write("                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">시작 시간</label>\r\n");
      out.write("                        <input type=\"time\" class=\"form-control\" id=\"startTime\" value=\"\" name=\"calendar_start\">\r\n");
      out.write("                        \r\n");
      out.write("                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">종료 시간</label>\r\n");
      out.write("                        <input type=\"time\" class=\"form-control\" id=\"endTime\" value=\"\" name=\"calendar_end\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-warning\" id=\"registCalendar\">등록</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"closeCalendar\">닫기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("    \r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("	<!-- modal 디테일 및 수정, 삭제 -->\r\n");
      out.write("    <div class=\"modal fade\" id=\"calendarDetailModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n");
      out.write("        aria-hidden=\"true\">\r\n");
      out.write("        <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">일정을 입력하세요.</h5>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">일정 내용</label>\r\n");
      out.write("	                        <input type=\"text\" class=\"form-control\" id=\"modifyTitle\" value=\"\" name=\"calendar_title\">\r\n");
      out.write("	                        \r\n");
      out.write("	                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">시작일</label>\r\n");
      out.write("	                        <input type=\"date\" class=\"form-control\" id=\"modifyStartDate\" value=\"\" name=\"calendar_start\">\r\n");
      out.write("	                        \r\n");
      out.write("	                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">종료일</label>\r\n");
      out.write("	                        <input type=\"date\" class=\"form-control\" id=\"modifyEndDate\" value=\"\" name=\"calendar_end\">\r\n");
      out.write("	                        \r\n");
      out.write("	                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">시작 시간</label>\r\n");
      out.write("	                        <input type=\"time\" class=\"form-control\" id=\"modifyStartTime\" value=\"\" name=\"calendar_start\">\r\n");
      out.write("	                        \r\n");
      out.write("	                        <label for=\"taskId\" class=\"col-form-label\" id=\"\">종료 시간</label>\r\n");
      out.write("	                        <input type=\"time\" class=\"form-control\" id=\"modifyEndTime\" value=\"\" name=\"calendar_end\">\r\n");
      out.write("	                        \r\n");
      out.write("	                        <input type=\"hidden\" name=\"calendar_no\" id=\"calendar_no\">\r\n");
      out.write("	                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-success\" id=\"modifyCalendarBtn\">수정</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-danger\" id=\"removeCalendarBtn\">삭제</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"closeModifyCalendar\">닫기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("<!-- Calendar <script></script> (박희성) -->\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!-- 풀캘린더  -->\r\n");
      out.write("<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("<!-- JavaScript Bundle with Popper -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function convertYMD(date){\r\n");
      out.write("		console.log(\"날짜다3  \" + date);\r\n");
      out.write("		let year = date.getFullYear();\r\n");
      out.write("		let month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n");
      out.write("		let day = ('0' + date.getDate()).slice(-2);\r\n");
      out.write("		let dateStr = year + '-' + month  + '-' + day;\r\n");
      out.write("		return dateStr;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 시간 포맷 변환 함수\r\n");
      out.write("	function formatTime(time) {\r\n");
      out.write("		// var date = new Date(time);\r\n");
      out.write("		var hours = time.getHours().toString().padStart(2, '0');\r\n");
      out.write("		var minutes = time.getMinutes().toString().padStart(2, '0');\r\n");
      out.write("		var formattedTime = hours + ':' + minutes;\r\n");
      out.write("		return formattedTime;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 한국 표준시간으로 변환하는 함수\r\n");
      out.write("	function convertKST(date){\r\n");
      out.write("		// 1. 현재 시간(Locale)\r\n");
      out.write("		const curr = new Date();\r\n");
      out.write("		console.log(\"현재시간(Locale) : \" + curr + '<br>');\r\n");
      out.write("\r\n");
      out.write("		// 2. UTC 시간 계산\r\n");
      out.write("			// const utc = curr.getTime() + (curr.getTimezoneOffset() * 60 * 1000);\r\n");
      out.write("		const utc = date.getTime();\r\n");
      out.write("\r\n");
      out.write("		// 3. UTC to KST (UTC + 9시간)\r\n");
      out.write("		const KR_TIME_DIFF = 9 * 60 * 60 * 1000;\r\n");
      out.write("		const kr_curr = new Date(utc - (KR_TIME_DIFF));\r\n");
      out.write("\r\n");
      out.write("		console.log(\"한국시간 : \" + kr_curr);\r\n");
      out.write("		return kr_curr;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(function(){\r\n");
      out.write("// 	document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("		var calendarEl = document.getElementById('calendar');\r\n");
      out.write("		var calendar = new FullCalendar.Calendar(calendarEl, {\r\n");
      out.write("			initialView : 'dayGridMonth',\r\n");
      out.write("			locale : 'ko', // 한국어 설정\r\n");
      out.write("// 			height: '700px', // calendar 높이 설정\r\n");
      out.write("	        expandRows: true, // 화면에 맞게 높이 재설정\r\n");
      out.write("	        slotMinTime: '08:00', // Day 캘린더에서 시작 시간\r\n");
      out.write("	        slotMaxTime: '20:00', // Day 캘린더에서 종료 시간\r\n");
      out.write("	        dayMaxEvents: true, // 이벤트가 오버되면 높이 제한 (+ 몇 개식으로 표현)\r\n");
      out.write("			\r\n");
      out.write("			// 헤더\r\n");
      out.write("			headerToolbar : {\r\n");
      out.write("				  left: 'prev,next today',\r\n");
      out.write("			      center: 'title',\r\n");
      out.write("			      right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n");
      out.write("			},\r\n");
      out.write("			         \r\n");
      out.write("			// 일정 표시\r\n");
      out.write("			events: [\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			],\r\n");
      out.write("			\r\n");
      out.write("			// 일정 드롭다운 이벤트 start\r\n");
      out.write("			eventDrop: function (info) {\r\n");
      out.write("					\r\n");
      out.write("				console.log(\"eventDrop 실행\");\r\n");
      out.write("				\r\n");
      out.write("				// 시작 시간 변환\r\n");
      out.write("				var startTimeInput = document.getElementById('modifyStartTime');\r\n");
      out.write("				var startTimeValue = info.event.start;\r\n");
      out.write("				var startTimeFormatted = formatTime(startTimeValue);\r\n");
      out.write("				startTimeInput.value = startTimeFormatted;\r\n");
      out.write("\r\n");
      out.write("				// 종료 시간 변환\r\n");
      out.write("				var endTimeInput = document.getElementById('modifyEndTime');\r\n");
      out.write("				var endTimeValue = info.event.end;\r\n");
      out.write("				var endTimeFormatted = formatTime(endTimeValue);\r\n");
      out.write("				endTimeInput.value = endTimeFormatted;\r\n");
      out.write("\r\n");
      out.write("	            // 이전에 등록한 일정의 정보를 이벤트를 클릭했을때 나타나는 해당 모달로 불러온다\r\n");
      out.write("				$('#modifyTitle').attr('value', info.event.title);\r\n");
      out.write("				$('#modifyStartDate').attr('value', info.event.start);\r\n");
      out.write("				$('#modifyEndDate').attr('value', info.event.end);\r\n");
      out.write("				$('#modifyStartTime').attr('value', info.event.start);\r\n");
      out.write("				$('#modifyEndTime').attr('value', info.event.end);\r\n");
      out.write("		            \r\n");
      out.write("				console.log(\"ㅡ 변경 전 정보 ㅡ\");\r\n");
      out.write("				console.log(\"내용 : \" + info.event.title);\r\n");
      out.write("	            console.log(\"시작 시간 : \" + info.event.start);\r\n");
      out.write("	            console.log(\"종료 시간 : \" + info.event.end);\r\n");
      out.write("					\r\n");
      out.write("				var title = $('#modifyTitle').val();\r\n");
      out.write("				var startTime = $('#modifyStartTime').val();\r\n");
      out.write("				var endTime = $('#modifyEndTime').val();\r\n");
      out.write("\r\n");
      out.write("				var endDate = new Date(info.endStr);\r\n");
      out.write("				var startDate = new Date(info.startStr);\r\n");
      out.write("		        endDate.setDate(endDate.getDate() - 1); // 일자를 1일 뒤로 당김\r\n");
      out.write("		        \r\n");
      out.write("        		let stdFormat = info.event._instance.range.start.toISOString().slice(0, 10) + \" \" + startTime;\r\n");
      out.write("                let endFormat = info.event._instance.range.end.toISOString().slice(0, 10) + \" \" + endTime;\r\n");
      out.write("\r\n");
      out.write("                console.log(\"ㅡ 변경 후 정보 ㅡ\");\r\n");
      out.write("                console.log(\"내용 : \" + title);\r\n");
      out.write("                console.log(\"시작 시간 : \" + stdFormat);\r\n");
      out.write("				console.log(\"종료 시간 : \" + endFormat);\r\n");
      out.write("	\r\n");
      out.write("                   	$.ajax({\r\n");
      out.write("						  url: \"/calendar/modify\",\r\n");
      out.write("						  type: \"POST\",\r\n");
      out.write("						  data : { \r\n");
      out.write("							 	calendar_title: title,	// 키값 : 벨류값\r\n");
      out.write("							  	calendar_start: stdFormat,	// 키값 : 벨류값\r\n");
      out.write("							  	calendar_end: endFormat,	// 키값 : 벨류값\r\n");
      out.write("							  	calendar_no: info.event._def.extendedProps.cal_no\r\n");
      out.write("						  },\r\n");
      out.write("						  success : function(data){\r\n");
      out.write("							  alert(\"일정이 수정 되었습니다.\");\r\n");
      out.write("							  $(\"#calendarModal\").modal(\"hide\");\r\n");
      out.write("							  location.reload();\r\n");
      out.write("						  },\r\n");
      out.write("						  error : function(request,status,error){\r\n");
      out.write("							alert(\"error(ajax)\"); // 실패 시 처리\r\n");
      out.write("						  }\r\n");
      out.write("					});\r\n");
      out.write("			// 일정 드롭다운 이벤트 end\r\n");
      out.write("			}, \r\n");
      out.write("			\r\n");
      out.write("			// 이벤트 클릭 start\r\n");
      out.write("			eventClick:function(info) {\r\n");
      out.write("				$('#calendar_no').val(info.event._def.extendedProps.cal_no);\r\n");
      out.write("				console.log(\"eventClick 실행\");\r\n");
      out.write("				\r\n");
      out.write("				// 시작일 변환\r\n");
      out.write("				var startDateInput = document.getElementById('modifyStartDate');\r\n");
      out.write("				var startDateValue = info.event.start;\r\n");
      out.write("				var startDateFormatted = convertYMD(startDateValue);\r\n");
      out.write("				startDateInput.value = startDateFormatted;\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"시작일 \" + startDateFormatted);\r\n");
      out.write("				\r\n");
      out.write("				// 종료일 변환\r\n");
      out.write("				var endDateInput = document.getElementById('modifyEndDate');\r\n");
      out.write("				var endDateValue = info.event.end;\r\n");
      out.write("				if(endDateValue == null){\r\n");
      out.write("					endDateValue = startDateValue;\r\n");
      out.write("				}\r\n");
      out.write("				var endDateFormatted = convertYMD(endDateValue);\r\n");
      out.write("				endDateInput.value = endDateFormatted;\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"종료일 \" + endDateFormatted);\r\n");
      out.write("\r\n");
      out.write("				// 시작 시간 변환\r\n");
      out.write("				var startTimeInput = document.getElementById('modifyStartTime');\r\n");
      out.write("				var startTimeFormatted = formatTime(startDateValue);\r\n");
      out.write("				startTimeInput.value = startTimeFormatted;\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"시작 시간 \" + startTimeFormatted);\r\n");
      out.write("	\r\n");
      out.write("				// 종료 시간 변환\r\n");
      out.write("				var endTimeInput = document.getElementById('modifyEndTime');\r\n");
      out.write("				var endTimeFormatted = formatTime(endDateValue);\r\n");
      out.write("				endTimeInput.value = endTimeFormatted;\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"종료 시간 \" + endTimeFormatted);\r\n");
      out.write("\r\n");
      out.write("	            // 이전에 등록한 일정의 정보를 이벤트를 클릭했을때 나타나는 해당 모달로 불러온다\r\n");
      out.write("				$('#modifyTitle').attr('value', '');\r\n");
      out.write("				$('#modifyTitle').attr('value', info.event.title);\r\n");
      out.write("				$('#modifyStartDate').attr('value', '');\r\n");
      out.write("				$('#modifyStartDate').attr('value', startDateFormatted);\r\n");
      out.write("				console.log(\"test \" + startDateFormatted);\r\n");
      out.write("				$('#modifyEndDate').attr('value', info.event.end);\r\n");
      out.write("				$('#modifyStartTime').attr('value', info.event.start);\r\n");
      out.write("				$('#modifyEndTime').attr('value', info.event.end);\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"ㅡ 변경 전 정보 ㅡ\");\r\n");
      out.write("				console.log(\"내용 : \" + info.event.title);\r\n");
      out.write("	            console.log(\"시작 시간 : \" + info.event.start);\r\n");
      out.write("	            console.log(\"종료 시간 : \" + info.event.end);\r\n");
      out.write("\r\n");
      out.write("	            $(\"#calendarDetailModal\").modal(\"show\");\r\n");
      out.write("		            \r\n");
      out.write("	            // 캘린더 삭제 버튼\r\n");
      out.write("	        	$(\"#removeCalendarBtn\").on(\"click\", function() {\r\n");
      out.write("	        		\r\n");
      out.write("	        		console.log(\"removeCalendarBtn 실행\");\r\n");
      out.write("	        		\r\n");
      out.write("	        		$.ajax({\r\n");
      out.write("						  url: \"/calendar/remove\",\r\n");
      out.write("						  type: \"POST\",\r\n");
      out.write("						  data : { \r\n");
      out.write("							  	calendar_no: info.event._def.extendedProps.cal_no\r\n");
      out.write("						  },\r\n");
      out.write("						  success : function(res){\r\n");
      out.write("							  alert(\"일정이 삭제 되었습니다.\");\r\n");
      out.write("							  $(\"#calendarDetailModal\").modal(\"hide\");\r\n");
      out.write("							  location.reload();\r\n");
      out.write("						  },\r\n");
      out.write("						  error : function(request,status,error){\r\n");
      out.write("							  alert(\"error(ajax)\"); // 실패 시 처리\r\n");
      out.write("						  } \r\n");
      out.write("					});\r\n");
      out.write("				});\r\n");
      out.write("		        	\r\n");
      out.write("	        	let cnt = 0;\r\n");
      out.write("            },\r\n");
      out.write("			selectable : true,\r\n");
      out.write("			droppable : true,\r\n");
      out.write("			editable : true,\r\n");
      out.write("			\r\n");
      out.write("			// 이벤트명 : function(){} : 각 날짜에 대한 이벤트를 통해 처리할 내용\r\n");
      out.write("			// 클릭 & 드래그로 일정 추가\r\n");
      out.write("			select: function(arg) { \r\n");
      out.write("				\r\n");
      out.write("				console.log(\"select 클릭&드래그 실행\");\r\n");
      out.write("\r\n");
      out.write("                $(\"#calendarModal\").modal(\"show\");\r\n");
      out.write("                \r\n");
      out.write("				console.log(\"arg.startStr : \" + arg.startStr);\r\n");
      out.write("				console.log(\"arg.endStr : \" + arg.endStr);\r\n");
      out.write("				\r\n");
      out.write("				var startDate = new Date(arg.startStr);\r\n");
      out.write("				var endDate = new Date(arg.endStr);\r\n");
      out.write("		        endDate.setDate(endDate.getDate() - 1); // 일자를 1일 뒤로 당김\r\n");
      out.write("		        \r\n");
      out.write("		        console.log(\"startDate : \" + startDate);\r\n");
      out.write("				console.log(\"endDate : \" + endDate);\r\n");
      out.write("				\r\n");
      out.write("				var endDateFormatted = convertYMD(endDate);\r\n");
      out.write("				endDate.value = endDateFormatted;\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"종료일 \" + endDateFormatted);\r\n");
      out.write("				\r\n");
      out.write("				// 이전에 등록한 일정의 정보를 이벤트를 클릭했을때 나타나는 해당 모달로 불러온다\r\n");
      out.write("				$('#StartDate').attr('value', arg.startStr);\r\n");
      out.write("				$('#EndDate').attr('value', endDate.value);\r\n");
      out.write("                \r\n");
      out.write("//                 $(\"#registCalendar\").on(\"click\", function () {\r\n");
      out.write("                	\r\n");
      out.write("// 					var title = $('#title').val();\r\n");
      out.write("// 					var startTime = $('#startTime').val();\r\n");
      out.write("// 					var endTime = $('#endTime').val();\r\n");
      out.write("// 					var calendar_no = $('#calendar_no').val();\r\n");
      out.write("// 					var ed = $('#EndDate').val();\r\n");
      out.write("// 					var sd = $('#StartDate').val();\r\n");
      out.write("					\r\n");
      out.write("// 					//내용 입력 여부 확인\r\n");
      out.write("// 					if(title == null || title == \"\"){\r\n");
      out.write("// 					    alert(\"내용을 입력하세요.\");\r\n");
      out.write("// 					}else if(startTime == \"\" || endTime ==\"\"){\r\n");
      out.write("// 					    alert(\"시간을 입력하세요.\");\r\n");
      out.write("// 					}else if(ed == sd && endTime < startTime){ // date 타입으로 변경 후 확인\r\n");
      out.write("// 						alert(\"종료 시간이 시작 시간보다 빠릅니다.\\n시간을 올바르게 설정해주세요.\");\r\n");
      out.write("// 						return false;\r\n");
      out.write("// 					}else{ // 정상적인 입력 시\r\n");
      out.write("				\r\n");
      out.write("// 	                 	$.ajax({\r\n");
      out.write("// 							 url: \"/calendar/regist\",\r\n");
      out.write("// 							 type: \"POST\",\r\n");
      out.write("// 							 data : { \r\n");
      out.write("// 							 	calendar_title: title,	// 키값 : 벨류값\r\n");
      out.write("// 							  	calendar_start: arg.startStr + ' ' + startTime ,	// 키값 : 벨류값\r\n");
      out.write("// 							  	calendar_end: endDateFormatted + \" \" + endTime,	// 키값 : 벨류값\r\n");
      out.write("// 							 },\r\n");
      out.write("// 							 success : function(data){\r\n");
      out.write("// 							  alert(\"일정이 등록되었습니다.\");\r\n");
      out.write("// 							  $(\"#calendarModal\").modal(\"hide\");\r\n");
      out.write("// 							  location.reload();\r\n");
      out.write("// 							 },\r\n");
      out.write("// 							 error : function(request,status,error){\r\n");
      out.write("// 								alert(\"code = \"+ request.status + \" message = \" + request.responseText + \" error = \" + error); // 실패 시 처리\r\n");
      out.write("// 								console.log(\"code = \"+ request.status + \" message = \" + request.responseText + \" error = \" + error);\r\n");
      out.write("// 							 }\r\n");
      out.write("// 						});\r\n");
      out.write("// 					};\r\n");
      out.write("// 				});\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#registCalendar\").on(\"click\", function(arg) {\r\n");
      out.write("        	\r\n");
      out.write("			var title = $('#title').val();\r\n");
      out.write("			var startTime = $('#startTime').val();\r\n");
      out.write("			var endTime = $('#endTime').val();\r\n");
      out.write("			var calendar_no = $('#calendar_no').val();\r\n");
      out.write("			var ed = $('#EndDate').val();\r\n");
      out.write("			var sd = $('#StartDate').val();\r\n");
      out.write("			\r\n");
      out.write("			var StartDate = $('#StartDate').val();\r\n");
      out.write("			var EndDate = $('#EndDate').val();\r\n");
      out.write("			\r\n");
      out.write("			//내용 입력 여부 확인\r\n");
      out.write("			if(title == null || title == \"\"){\r\n");
      out.write("			    alert(\"내용을 입력하세요.\");\r\n");
      out.write("			}else if(startTime == \"\" || endTime ==\"\"){\r\n");
      out.write("			    alert(\"시간을 입력하세요.\");\r\n");
      out.write("			}else if(ed == sd && endTime < startTime){ // date 타입으로 변경 후 확인\r\n");
      out.write("				alert(\"종료 시간이 시작 시간보다 빠릅니다.\\n시간을 올바르게 설정해주세요.\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}else{ // 정상적인 입력 시\r\n");
      out.write("		\r\n");
      out.write("             	$.ajax({\r\n");
      out.write("					 url: \"/calendar/regist\",\r\n");
      out.write("					 type: \"POST\",\r\n");
      out.write("					 data : { \r\n");
      out.write("					 	calendar_title: title,	// 키값 : 벨류값\r\n");
      out.write("					  	calendar_start: StartDate + ' ' + startTime ,	// 키값 : 벨류값\r\n");
      out.write("					  	calendar_end: EndDate + \" \" + endTime,	// 키값 : 벨류값\r\n");
      out.write("					 },\r\n");
      out.write("					 success : function(data){\r\n");
      out.write("					  alert(\"일정이 등록되었습니다.\");\r\n");
      out.write("					  $(\"#calendarModal\").modal(\"hide\");\r\n");
      out.write("					  location.reload();\r\n");
      out.write("					 },\r\n");
      out.write("					 error : function(request,status,error){\r\n");
      out.write("						alert(\"code = \"+ request.status + \" message = \" + request.responseText + \" error = \" + error); // 실패 시 처리\r\n");
      out.write("						console.log(\"code = \"+ request.status + \" message = \" + request.responseText + \" error = \" + error);\r\n");
      out.write("					 }\r\n");
      out.write("				});\r\n");
      out.write("			};\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		calendar.render();\r\n");
      out.write("		\r\n");
      out.write("		$(\"#closeCalendar\").on(\"click\", function(arg) {\r\n");
      out.write("			\r\n");
      out.write("			console.log(\"closeCalendar 실행\");\r\n");
      out.write("			\r\n");
      out.write("			 $(\"#endTime\").val('');\r\n");
      out.write("			 $(\"#startTime\").val('');\r\n");
      out.write("			 $(\"#title\").val('');\r\n");
      out.write("// 			 $(\"#StartDate\").val('');\r\n");
      out.write("// 			 $(\"#EndDate\").val('');\r\n");
      out.write("\r\n");
      out.write("			$('#StartDate').attr('value', arg.startStr);\r\n");
      out.write("			$('#EndDate').attr('value', arg.endStr);\r\n");
      out.write("			 \r\n");
      out.write("			 $(\"#calendarModal\").modal(\"hide\");\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 디테일 캘린더 닫기 버튼\r\n");
      out.write("    	$(\"#closeModifyCalendar\").on(\"click\", function() {\r\n");
      out.write("    		console.log(\"closeModifyCalendar 실행\");\r\n");
      out.write("				 console.log(\"모달 입력값 초기화\");\r\n");
      out.write("				 \r\n");
      out.write("			$(\"#calendarDetailModal\").modal(\"hide\");\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("    	// 캘린더 수정 완료 버튼\r\n");
      out.write("    	$(\"#modifyCalendarBtn\").on(\"click\", function() {\r\n");
      out.write("    		\r\n");
      out.write("    		console.log(\"modifyCalendarBtn 실행\");\r\n");
      out.write("    		var title = $('#modifyTitle').val();\r\n");
      out.write("			var startDate = $('#modifyStartDate').val();\r\n");
      out.write("			var sd = $('#modifyStartDate').val();\r\n");
      out.write("			console.log(startDate);\r\n");
      out.write("			var endDate = $('#modifyEndDate').val();\r\n");
      out.write("			var ed = $('#modifyEndDate').val();\r\n");
      out.write("			var startTime = $('#modifyStartTime').val();\r\n");
      out.write("			console.log(startTime);\r\n");
      out.write("			var endTime = $('#modifyEndTime').val();\r\n");
      out.write("\r\n");
      out.write("			console.log(\"sd : \" + sd);\r\n");
      out.write("			console.log(\"ed : \" + ed);\r\n");
      out.write("			console.log(startTime);\r\n");
      out.write("	        \r\n");
      out.write("    		let stdFormat = sd + \" \" + startTime;\r\n");
      out.write("            let endFormat = ed + \" \" + endTime;\r\n");
      out.write("            console.log(\"ㅡ 변경 후 정보 ㅡ\");\r\n");
      out.write("            console.log(\"내용 : \" + title);\r\n");
      out.write("            console.log(\"시작 시간 : \" + stdFormat);\r\n");
      out.write("			console.log(\"종료 시간 : \" + endFormat);\r\n");
      out.write("			console.log(endTime);\r\n");
      out.write("			console.log(startTime);\r\n");
      out.write("			\r\n");
      out.write("			//내용 입력 여부 확인\r\n");
      out.write("			if(title == null || title == \"\"){\r\n");
      out.write("			    alert(\"내용을 입력하세요.\");\r\n");
      out.write("			}else if(startTime == \"\" || endTime ==\"\"){\r\n");
      out.write("			    alert(\"시간을 입력하세요.\");\r\n");
      out.write("			}else if(ed == sd && endTime < startTime){ // date 타입으로 변경 후 확인\r\n");
      out.write("				alert(\"종료 시간이 시작 시간보다 빠릅니다.\\n시간을 올바르게 설정해주세요.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}else{ // 정상적인 입력 시\r\n");
      out.write("               	$.ajax({\r\n");
      out.write("					url: \"/calendar/modify\",\r\n");
      out.write("					type: \"POST\",\r\n");
      out.write("					data : { \r\n");
      out.write("						calendar_title: title,	// 키값 : 벨류값\r\n");
      out.write("					  	calendar_start: stdFormat,	// 키값 : 벨류값\r\n");
      out.write("					  	calendar_end: endFormat,	// 키값 : 벨류값\r\n");
      out.write("					  	calendar_no: $('#calendar_no').val()\r\n");
      out.write("					},\r\n");
      out.write("					success : function(data) {\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						alert(\"일정이 수정 되었습니다.\");\r\n");
      out.write("						$(\"#calendarModal\").modal(\"hide\");\r\n");
      out.write("						location.reload();\r\n");
      out.write("					},\r\n");
      out.write("					error : function(request,status,error) {\r\n");
      out.write("						alert(\"error(ajax)\"); // 실패 시 처리\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			};\r\n");
      out.write("			return;\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 풀캘린더  -->\r\n");
      out.write("<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("<!-- JavaScript Bundle with Popper -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("    <div class=\"col\">\r\n");
      out.write("        <div class=\"card mb-4 rounded-3 shadow-sm border\" style=\"height: 75%; display: block;\">\r\n");
      out.write("            <div class=\"card-header py-3\">\r\n");
      out.write("                <h5 class=\"my-0 fw-normal\">최근 1년 손익 차트</h5>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-body\" id=\"barBody\" style=\"margin-top: 30px;\">\r\n");
      out.write("                <div id=\"line-chart\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"col\">\r\n");
      out.write("			<div class=\"card mb-2 rounded-3 shadow-sm border\" style=\"height: 75%;\" >\r\n");
      out.write("				<div class=\"card-header py-3\">\r\n");
      out.write("					<h5 class=\"my-0 fw-normal\">전자 결재</h5>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<table class=\"table table-striped table-sm text-center\" style=\"font-size: 0.8em;\">\r\n");
      out.write("						<thead>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\">\r\n");
      out.write("								<font style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">결재서류명</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">기안자</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">구분</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">진행상태</font>\r\n");
      out.write("								</th>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</thead>\r\n");
      out.write("						<tbody>\r\n");
      out.write("						");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      boolean _jspx_th_c_005fforEach_005f1_reused = false;
      try {
        _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fforEach_005f1.setParent(null);
        // /WEB-INF/views/common/main.jsp(63,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/main.jsp(63,6) '${draft }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${draft }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
        // /WEB-INF/views/common/main.jsp(63,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fforEach_005f1.setVar("draft");
        int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
        try {
          int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
          if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\r\n");
              out.write("							<tr>\r\n");
              out.write("								<td><font style=\"vertical-align: inherit;\"> \r\n");
              out.write("								<font style=\"vertical-align: inherit;\"><a href=\"#\" onclick=\"OpenWindow('");
              out.print(request.getContextPath());
              out.write("/management/detail.do?dr_no=");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.dr_no }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("&send=N', '기안문 조회', 700, 1000)\">");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</a>\r\n");
              out.write("								</font>\r\n");
              out.write("								</font>\r\n");
              out.write("								</td>\r\n");
              out.write("								<td><font style=\"vertical-align: inherit;\"> <font\r\n");
              out.write("										style=\"vertical-align: inherit;\">");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.e_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</font>\r\n");
              out.write("								</font></td>\r\n");
              out.write("								<td><font style=\"vertical-align: inherit;\"> <font\r\n");
              out.write("										style=\"vertical-align: inherit;\">");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.gb }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("</font>\r\n");
              out.write("								</font></td>\r\n");
              out.write("								<td>\r\n");
              out.write("									<font style=\"vertical-align: inherit;\"> \r\n");
              out.write("										<font style=\"vertical-align: inherit;\">\r\n");
              out.write("											");
              if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
                return;
              out.write("\r\n");
              out.write("											");
              if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
                return;
              out.write("\r\n");
              out.write("											");
              if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
                return;
              out.write("\r\n");
              out.write("											");
              if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
                return;
              out.write("\r\n");
              out.write("										</font>\r\n");
              out.write("									</font>\r\n");
              out.write("								</td>\r\n");
              out.write("							</tr>\r\n");
              out.write("						");
              int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
        } finally {
          _jspx_th_c_005fforEach_005f1.doFinally();
        }
        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
        _jspx_th_c_005fforEach_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
      }
      out.write("\r\n");
      out.write("						</tbody>\r\n");
      out.write("					</table>\r\n");
      out.write("					<hr>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("		<div class=\"\" style=\"width:59%; height:20%; right: 10px; bottom: 10%; position: absolute; z-index: 1\">\r\n");
      out.write("			<div class=\"card rounded-3 shadow-sm border\" style=\"height: 110%;\">\r\n");
      out.write("				<div class=\"card-header\">\r\n");
      out.write("					<h5 class=\"my-0 fw-normal\" style=\"font-size: 1em\">발주 요청 내역</h5>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<table class=\"table table-striped table-sm text-center\" style=\"font-size: 0.8em;\">\r\n");
      out.write("						<thead>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\">\r\n");
      out.write("								<font style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">발주 품목</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">발주 요청 날짜</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">진행 상황</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">배송 업체</font>\r\n");
      out.write("								</th>\r\n");
      out.write("								<th class=\"p-2 mb-2 align-middle scope=\"><font\r\n");
      out.write("									style=\"vertical-align: inherit; vertical-align: inherit; color: black;\">제품 금액</font>\r\n");
      out.write("								</th>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</thead>\r\n");
      out.write("						<tbody>\r\n");
      out.write("						");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</tbody>\r\n");
      out.write("					</table>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/bootstrap/plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("function OpenWindow(UrlStr, WinTitle, WinWidth, WinHeight){\r\n");
      out.write("	winleft = (screen.width - WinWidth) / 2;\r\n");
      out.write("	wintop = (screen.height - WinHeight) / 2;\r\n");
      out.write("	var win = window.open(UrlStr, WinTitle, \"scrollbars=yes,width=\" + WinWidth+\", \"\r\n");
      out.write("							+ \"height=\" + WinHeight + \",top=\"+ wintop + \",left=\"\r\n");
      out.write("							+ winleft + \",resizable=yes,status=yes\");\r\n");
      out.write("	win.focus();\r\n");
      out.write("};\r\n");
      out.write("var data = [\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(0)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(0)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(0)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(1)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(1)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(1)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(2)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(2)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(2)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(3)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(3)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(3)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(4)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(4)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(4)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(5)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(5)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(5)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(6)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(6)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(6)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(7)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(7)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(7)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(8)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(8)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(8)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(9)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(9)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(9)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(10)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(10)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(10)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("    { y: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month.get(11)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", g1: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit.get(11)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원', g2: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${profit2.get(11)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" + '원'},\r\n");
      out.write("  ],\r\n");
      out.write("  config = {\r\n");
      out.write("    data: data,\r\n");
      out.write("    xkey: 'y',\r\n");
      out.write("    ykeys: ['g1', 'g2'],\r\n");
      out.write("    labels: ['올해 손익', '전년 손익'],\r\n");
      out.write("    fillOpacity: 0.6,\r\n");
      out.write("    hideHover: 'auto',\r\n");
      out.write("    behaveLikeLine: true,\r\n");
      out.write("    resize: true,\r\n");
      out.write("    pointFillColors:['#ffffff'],\r\n");
      out.write("    pointStrokeColors: ['green'],\r\n");
      out.write("    lineColors:['red', 'blue']\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("//     config.element = 'area-chart';\r\n");
      out.write("//     Morris.Area(config);\r\n");
      out.write("     config.element = 'line-chart';\r\n");
      out.write("     Morris.Line(config);\r\n");
      out.write("//    config.element = 'bar-chart';\r\n");
      out.write("//    Morris.Bar(config);\r\n");
      out.write("//     config.element = 'stacked';\r\n");
      out.write("//     config.stacked = true;\r\n");
      out.write("//     Morris.Bar(config);\r\n");
      out.write("//     Morris.Donut({\r\n");
      out.write("//         element: 'pie-chart',\r\n");
      out.write("//         data: [\r\n");
      out.write("//             {label: \"가\", value: 30},\r\n");
      out.write("//             {label: \"나\", value: 15},\r\n");
      out.write("//             {label: \"다\", value: 45},\r\n");
      out.write("//             {label: \"라\", value: 10},\r\n");
      out.write("//         ]\r\n");
      out.write("//     });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/bootstrap/plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	function goPage(murl, mcode, micon){\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		if(murl.indexOf('?') != -1) {\r\n");
      out.write("			let modMurl = murl.substring(0, murl.indexOf('?'));	\r\n");
      out.write("			sessionStorage.setItem(\"murl\", murl);		\r\n");
      out.write("		}else {\r\n");
      out.write("			sessionStorage.setItem(\"murl\", murl);		\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		sessionStorage.setItem(\"mcode\", mcode);\r\n");
      out.write("		sessionStorage.setItem(\"micon\", micon);\r\n");
      out.write("		\r\n");
      out.write("		let modMcode = mcode.substring(0,3) + \"0000\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		location.href = \"");
      out.print( request.getContextPath() );
      out.write("\" + murl + \"?mcode=\" + modMcode + \"&murl=\" + murl;\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/common/calendar_js.jsp(69,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("vo");
      // /WEB-INF/views/common/calendar_js.jsp(69,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/calendar_js.jsp(69,4) '${calendarList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${calendarList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					{\r\n");
            out.write("					  title: '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.getCalendar_title()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',\r\n");
            out.write("					  start: '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.getCalendar_start()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',\r\n");
            out.write("					  end: '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.getCalendar_end()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',\r\n");
            out.write("					  cal_no: '");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.getCalendar_no()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("',\r\n");
            out.write("					  color: '#7bc4b2' // '#' + Math.round(Math.random() * 0xffffff).toString(16)\r\n");
            out.write("					},\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/common/main.jsp(79,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.pl_progress eq '0'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												결재 대기중\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/common/main.jsp(82,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.pl_progress eq '1' || draft.pl_progress eq '2'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												결재 진행중(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.pl_progress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/common/main.jsp(85,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.pl_progress eq '3'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												결재 완료\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/common/main.jsp(88,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${draft.pl_progress eq '1fail' || draft.pl_progress eq '2fail' || draft.pl_progress eq '3fail'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("												반려\r\n");
          out.write("											");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/views/common/main.jsp(133,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/main.jsp(133,6) '${list }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/common/main.jsp(133,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("list");
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("							<tr>\r\n");
            out.write("								<td><font style=\"vertical-align: inherit;\"> <font\r\n");
            out.write("										style=\"vertical-align: inherit;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.o_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</font>\r\n");
            out.write("								</font></td>\r\n");
            out.write("								<td><font style=\"vertical-align: inherit;\"> <font\r\n");
            out.write("										style=\"vertical-align: inherit;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.sys_regdate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</font>\r\n");
            out.write("								</font></td>\r\n");
            out.write("								<td>\r\n");
            out.write("									<font style=\"vertical-align: inherit;\"> \r\n");
            out.write("										<font style=\"vertical-align: inherit; color: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.progress eq '입고 완료' ? 'blue' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("											");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.progress }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("										</font>\r\n");
            out.write("									</font>\r\n");
            out.write("								</td>\r\n");
            out.write("								<td><font style=\"vertical-align: inherit;\"> <font\r\n");
            out.write("										style=\"vertical-align: inherit;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.con_c_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</font>\r\n");
            out.write("								</font></td>\r\n");
            out.write("								<td><font style=\"vertical-align: inherit;\"> <font\r\n");
            out.write("										style=\"vertical-align: inherit;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.unit_price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</font>\r\n");
            out.write("								</font></td>\r\n");
            out.write("							</tr>\r\n");
            out.write("						");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }
}
