/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.88
 * Generated at: 2023-06-05 00:49:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.dw.customer.vo.FaqVO;
import kr.or.dw.customer.vo.NoticeVO;
import kr.or.dw.member.vo.MemberVO;
import java.util.List;

public final class faqInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/view/admin/./header.jsp", Long.valueOf(1685924557522L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.dw.member.vo.MemberVO");
    _jspx_imports_classes.add("kr.or.dw.customer.vo.FaqVO");
    _jspx_imports_classes.add("kr.or.dw.customer.vo.NoticeVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>관리자 페이지</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath());
      out.write("/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath());
      out.write("/css/font-awesome.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath());
      out.write("/css/fonts.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath());
      out.write("/css/adminstyle.css\">\r\n");
      out.write("<script src=\"");
      out.print( request.getContextPath());
      out.write("/js/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( request.getContextPath());
      out.write("/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( request.getContextPath());
      out.write("/js/all.min.js\"></script>\r\n");

	List<MemberVO> memList =(List<MemberVO>)request.getAttribute("memList");
	int memCount = (int)request.getAttribute("memCount");
	int adminCount = (int)request.getAttribute("adminCount");
	MemberVO memberVo = (MemberVO)request.getAttribute("memberVo");
	
	String picSrc = "/profilePath/default/defaultProfile.png";
	
	if(memberVo.getProfile() != null) {
		picSrc = "/profilePath/" + memberVo.getProfile();
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav class=\"sidebar\">\r\n");
      out.write("    <div class=\"logo d-flex justify-content-between text-center\">\r\n");
      out.write("        <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/admin.do\">Dashboard</a>\r\n");
      out.write("        <div class=\"sidebar_close_icon d-lg-none\">\r\n");
      out.write("            <i class=\"ti-close\"></i>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul id=\"sidebar_menu\" class=\"metismenu\">\r\n");
      out.write("        <li class=\"home\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/main.do\" class=\"nav-link active\">Home</a></li>\r\n");
      out.write("        <span class=\"title\">회원 관리</span>\r\n");
      out.write("        <li><a href=\"#\" class=\"nav-link\">회원 정보</a></li>\r\n");
      out.write("        <li><a href=\"#\" class=\"nav-link\">팔로우</a></li>\r\n");
      out.write("        <span class=\"title\">게시판 관리</span>\r\n");
      out.write("        <li><a href=\"");
      out.print( request.getContextPath());
      out.write("/admin/adminnotice.do\" class=\"nav-link\">공지사항</a></li>\r\n");
      out.write("        <li><a href=\"");
      out.print( request.getContextPath());
      out.write("/admin/adminFaq.do\" class=\"nav-link\">자주묻는질문</a></li>\r\n");
      out.write("        <span class=\"title\">기타 관리</span>\r\n");
      out.write("    </ul>\r\n");
      out.write("</nav>\r\n");
      out.write("<section class=\"main_content\">\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg gnb\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"gnb-search\">\r\n");
      out.write("                <div class=\"input-group\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" placeholder=\"회원정보 검색\">\r\n");
      out.write("                    <button class=\"btn btn-search\" type=\"button\"><i class=\"bi bi-search\"></i></button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"gnb-notice\">\r\n");
      out.write("                <a href=\"#\">\r\n");
      out.write("                    <i class=\"bi bi-bell\"></i>\r\n");
      out.write("                    <span class=\"position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle\">\r\n");
      out.write("                        <span class=\"visually-hidden\">New alerts</span>\r\n");
      out.write("                    </span>\r\n");
      out.write("                </a>\r\n");
      out.write("                <a href=\"#\">\r\n");
      out.write("                    <i class=\"bi bi-chat\"></i>\r\n");
      out.write("                    <span class=\"position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle\">\r\n");
      out.write("                        <span class=\"visually-hidden\">New alerts</span>\r\n");
      out.write("                    </span>\r\n");
      out.write("                </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"dropdown text-end\">\r\n");
      out.write("                <a href=\"#\" class=\"d-block link-dark text-decoration-none\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("                    <img src=\"");
      out.print( picSrc );
      out.write("\" alt=\"mdo\" width=\"70\" height=\"70\" class=\"rounded-circle\">\r\n");
      out.write("                </a>\r\n");
      out.write("                <ul class=\"dropdown-menu\">\r\n");
      out.write("                    <li><a class=\"dropdown-item\" href=\"#\"><strong>");
      out.print( memberVo.getNick() );
      out.write("</strong>님</a></li>\r\n");
      out.write("                    <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/myinfo.do\">마이페이지</a></li>\r\n");
      out.write("                    <li><hr class=\"dropdown-divider\"></li>\r\n");
      out.write("                    <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout.do\">로그아웃</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>");
      out.write("\r\n");
      out.write("\r\n");

	FaqVO faqVo = null;
	if( request.getAttribute("faqVo") != null){
		faqVo = (FaqVO) request.getAttribute("faqVo");
	}

      out.write("\r\n");
      out.write("                <div class=\"table\">\r\n");
      out.write("                    <style>\r\n");
      out.write("                        .table {padding: 15px;}\r\n");
      out.write("                        .btn-write {padding: 10px 15px!important;border: 1px solid #333!important;}\r\n");
      out.write("                        .ck-editor__editable { height: 400px; }\r\n");
      out.write("                    </style>\r\n");
      out.write("                    <form name=\"fwrite\" id=\"fwrite\" action=\"");
      out.print(request.getContextPath());
      out.write("/admin/fContentInsert.do\" method=\"post\">\r\n");
      out.write("	                    ");
 if(faqVo != null){ 
      out.write("\r\n");
      out.write("	                    <input type=\"hidden\" name=\"f_no\" value=\"");
      out.print( faqVo.getF_no() );
      out.write("\">\r\n");
      out.write("	                    ");
} 
      out.write("\r\n");
      out.write("	                    <div class=\"mb-3\">\r\n");
      out.write("	                        <label for=\"subject\" class=\"form-label\">제목</label>\r\n");
      out.write("	                        <input type=\"text\" name=\"f_title\" class=\"form-control\" id=\"subject\" value=\"");
      out.print( faqVo != null ? faqVo.getF_title() : "" );
      out.write("\" required>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"mb-3\">\r\n");
      out.write("	                        <textarea name=\"f_content\" id=\"content\" rows=\"30\">");
      out.print( faqVo != null ? faqVo.getF_content() : "" );
      out.write("</textarea>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"text-end write-btn\">\r\n");
      out.write("	                        <button type=\"submit\" class=\"btn btn-write\">");
      out.print( faqVo != null ? "수정하기" : "글쓰기" );
      out.write("</button>\r\n");
      out.write("	                    </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                    <script src=\"https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/ckeditor.js\"></script>\r\n");
      out.write("                    <script src=\"https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/translations/ko.js\"></script>\r\n");
      out.write("                    <script>\r\n");
      out.write("                    ClassicEditor.create( document.querySelector( '#content' ), {\r\n");
      out.write("                        language: \"ko\"\r\n");
      out.write("                    });\r\n");
      out.write("                    </script>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
