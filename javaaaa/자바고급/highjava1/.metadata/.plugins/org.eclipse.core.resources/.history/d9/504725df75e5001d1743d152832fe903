package kr.or.dw.basic;

import java.io.Serializable;

public class ObjectIOTest {

	public static void main(String[] args) {
		// 객체를 파일에 저장하는 매체
		Member mem1 = new Member("홍길동", 24, "대전시 중구 선화동");
		Member mem2 = new Member("홍길서", 24, "대전시 중구 선화서");
		Member mem3 = new Member("홍길남", 24, "대전시 중구 선화남");
		Member mem4 = new Member("홍길북", 24, "대전시 중구 선화북");

	}

}

// 데이터 저장용 클래스 작성
class Member implements Serializable{
	// Serialization(직렬화)
	// 직렬화란? 객체를 직렬화하여 전송 가능한 형태로 만드는 것을 의미한다.
	// 객체들의 데이터를 연속적인 데이터로 변형하여 Stream을 통해 데이터를 읽도록 해준다.
	// 주로 객체들을 통째로 파일로 저장하거나 전송하고 싶을 때 주로 사용한다.
	
	private String name;
	// transient : 직렬화가 되지 않을 인스턴스 변수에 지정한다. (직렬화 시키고 싶지 않은)
	//			 : 직렬화가 되지 않은 인스턴스 변수는 기본값으로 저장된다.
	private transient int age;
	private transient String addr;
	
	public Member(String name, int age, String addr) {
		this.name = name;
		this.age = age;
		this.addr = addr;
	}
	
	public String getName() {
		return name;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public int getAge() {
		return age;
	}
	
	public void setAge(int age) {
		this.age = age;
	}
	
	public String getAddr() {
		return addr;
	}
	
	public void setAddr(String addr) {
		this.addr = addr;
	}
	
	
	
	
	
	
}